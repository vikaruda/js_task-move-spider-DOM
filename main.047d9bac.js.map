{"version":3,"sources":["scripts/main.js"],"names":["document","addEventListener","e","relatedTarget","target","closest","getSpider","querySelector","rect","getBoundingClientRect","widthContainer","width","heightContainer","height","widthSpider","clientWidth","heightSpider","clientHeight","style","getComputedStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","subWidth","borderRightWidth","subHeight","borderBottomWidth","forX","clientX","left","forY","clientY","top","newX","Math","max","min","newY"],"mappings":";AAAA,aAEAA,SAASC,iBAAiB,QAAS,SAACC,GAC5BC,IAAAA,EAAgBD,EAAEE,OAAOC,QAAQ,SACjCC,EAAYN,SAASO,cAAc,WAErCJ,GAAAA,EAAe,CACXK,IAAAA,EAAOL,EAAcM,wBACrBC,EAAiBF,EAAKG,MACtBC,EAAkBJ,EAAKK,OAEvBC,EAAcR,EAAUS,YACxBC,EAAeV,EAAUW,aAGzBC,EAAQC,iBAAiBhB,GACzBiB,EAAaC,SAASH,EAAMI,iBAC5BC,EAAYF,SAASH,EAAMM,gBAI3BC,EAAWf,EAAiBI,EAAcM,EAH5BC,SAASH,EAAMQ,kBAI7BC,EAAYf,EAAkBI,EAAeO,EAH9BF,SAASH,EAAMU,mBAK9BC,EAAO3B,EAAE4B,QAAUtB,EAAKuB,KAAOjB,EAAc,EAAIM,EACjDY,EAAO9B,EAAE+B,QAAUzB,EAAK0B,IAAMlB,EAAe,EAAIO,EAEjDY,EAAOC,KAAKC,IAAI,EAAGD,KAAKE,IAAIb,EAAUI,IACtCU,EAAOH,KAAKC,IAAI,EAAGD,KAAKE,IAAIX,EAAWK,IAE7C1B,EAAUY,MAAMa,KAAOI,EAAO,KAC9B7B,EAAUY,MAAMgB,IAAMK,EAAO","file":"main.047d9bac.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\ndocument.addEventListener('click', (e) => {\n  const relatedTarget = e.target.closest('.wall');\n  const getSpider = document.querySelector('.spider');\n\n  if (relatedTarget) {\n    const rect = relatedTarget.getBoundingClientRect();\n    const widthContainer = rect.width;\n    const heightContainer = rect.height;\n\n    const widthSpider = getSpider.clientWidth;\n    const heightSpider = getSpider.clientHeight;\n\n    // Отримуємо стиль рамки\n    const style = getComputedStyle(relatedTarget);\n    const borderLeft = parseInt(style.borderLeftWidth);\n    const borderTop = parseInt(style.borderTopWidth);\n    const borderRight = parseInt(style.borderRightWidth);\n    const borderBottom = parseInt(style.borderBottomWidth);\n\n    const subWidth = widthContainer - widthSpider - borderLeft - borderRight;\n    const subHeight = heightContainer - heightSpider - borderTop - borderBottom;\n\n    const forX = e.clientX - rect.left - widthSpider / 2 - borderLeft;\n    const forY = e.clientY - rect.top - heightSpider / 2 - borderTop;\n\n    const newX = Math.max(0, Math.min(subWidth, forX));\n    const newY = Math.max(0, Math.min(subHeight, forY));\n\n    getSpider.style.left = newX + 'px';\n    getSpider.style.top = newY + 'px';\n  }\n});\n"]}